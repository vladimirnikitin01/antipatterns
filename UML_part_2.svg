<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="5656px" height="2884px" viewBox="-0.5 -0.5 5656 2884" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2020-05-02T11:57:32.843Z&quot; agent=&quot;5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36&quot; etag=&quot;qZxxYDYXHhgKwwPaw42V&quot; version=&quot;13.0.5&quot; type=&quot;google&quot;&gt;&lt;diagram id=&quot;C5RBs43oDa-KdzZeNtuy&quot; name=&quot;Page-1&quot;&gt;&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><defs><clipPath id="mx-clip-934-441-362-144-0"><rect x="934" y="441" width="362" height="144"/></clipPath><clipPath id="mx-clip-934-593-362-212-0"><rect x="934" y="593" width="362" height="212"/></clipPath><clipPath id="mx-clip-1624-441-672-104-0"><rect x="1624" y="441" width="672" height="104"/></clipPath><clipPath id="mx-clip-1324-31-242-134-0"><rect x="1324" y="31" width="242" height="134"/></clipPath><clipPath id="mx-clip-1324-173-242-140-0"><rect x="1324" y="173" width="242" height="140"/></clipPath><clipPath id="mx-clip-1644-1026-252-26-0"><rect x="1644" y="1026" width="252" height="26"/></clipPath><clipPath id="mx-clip-1644-1060-252-50-0"><rect x="1644" y="1060" width="252" height="50"/></clipPath><clipPath id="mx-clip-814-951-522-134-0"><rect x="814" y="951" width="522" height="134"/></clipPath><clipPath id="mx-clip-814-1093-522-232-0"><rect x="814" y="1093" width="522" height="232"/></clipPath><clipPath id="mx-clip-824-1381-420-84-0"><rect x="824" y="1381" width="420" height="84"/></clipPath><clipPath id="mx-clip-824-1473-420-182-0"><rect x="824" y="1473" width="420" height="182"/></clipPath><clipPath id="mx-clip-1554-2131-252-84-0"><rect x="1554" y="2131" width="252" height="84"/></clipPath><clipPath id="mx-clip-1449-2371-462-26-0"><rect x="1449" y="2371" width="462" height="26"/></clipPath><clipPath id="mx-clip-1449-2405-462-140-0"><rect x="1449" y="2405" width="462" height="140"/></clipPath><clipPath id="mx-clip-2684-471-832-84-0"><rect x="2684" y="471" width="832" height="84"/></clipPath><clipPath id="mx-clip-2684-563-832-182-0"><rect x="2684" y="563" width="832" height="182"/></clipPath><clipPath id="mx-clip-2164-2681-522-64-0"><rect x="2164" y="2681" width="522" height="64"/></clipPath><clipPath id="mx-clip-2164-2753-522-132-0"><rect x="2164" y="2753" width="522" height="132"/></clipPath><clipPath id="mx-clip-964-2681-272-134-0"><rect x="964" y="2681" width="272" height="134"/></clipPath><clipPath id="mx-clip-1354-1751-582-74-0"><rect x="1354" y="1751" width="582" height="74"/></clipPath><clipPath id="mx-clip-1354-1833-582-142-0"><rect x="1354" y="1833" width="582" height="142"/></clipPath><clipPath id="mx-clip-4-1759-572-74-0"><rect x="4" y="1759" width="572" height="74"/></clipPath><clipPath id="mx-clip-4-1833-572-152-0"><rect x="4" y="1833" width="572" height="152"/></clipPath><clipPath id="mx-clip-61-2071-292-44-0"><rect x="61" y="2071" width="292" height="44"/></clipPath><clipPath id="mx-clip-61-2125-292-70-0"><rect x="61" y="2125" width="292" height="70"/></clipPath><clipPath id="mx-clip-674-1751-592-84-0"><rect x="674" y="1751" width="592" height="84"/></clipPath><clipPath id="mx-clip-674-1843-592-182-0"><rect x="674" y="1843" width="592" height="182"/></clipPath><clipPath id="mx-clip-2824-901-522-164-0"><rect x="2824" y="901" width="522" height="164"/></clipPath><clipPath id="mx-clip-2824-1073-522-132-0"><rect x="2824" y="1073" width="522" height="132"/></clipPath><clipPath id="mx-clip-2224-841-502-104-0"><rect x="2224" y="841" width="502" height="104"/></clipPath><clipPath id="mx-clip-2224-953-502-232-0"><rect x="2224" y="953" width="502" height="232"/></clipPath><clipPath id="mx-clip-2774-1411-482-54-0"><rect x="2774" y="1411" width="482" height="54"/></clipPath><clipPath id="mx-clip-2774-1473-482-182-0"><rect x="2774" y="1473" width="482" height="182"/></clipPath><clipPath id="mx-clip-3924-2041-522-104-0"><rect x="3924" y="2041" width="522" height="104"/></clipPath><clipPath id="mx-clip-3924-2153-522-302-0"><rect x="3924" y="2153" width="522" height="302"/></clipPath><clipPath id="mx-clip-4616-1681-542-34-0"><rect x="4616" y="1681" width="542" height="34"/></clipPath><clipPath id="mx-clip-4616-1723-542-162-0"><rect x="4616" y="1723" width="542" height="162"/></clipPath><clipPath id="mx-clip-4586-2241-442-26-0"><rect x="4586" y="2241" width="442" height="26"/></clipPath><clipPath id="mx-clip-4586-2275-442-80-0"><rect x="4586" y="2275" width="442" height="80"/></clipPath><clipPath id="mx-clip-4944-1981-382-26-0"><rect x="4944" y="1981" width="382" height="26"/></clipPath><clipPath id="mx-clip-4944-2015-382-60-0"><rect x="4944" y="2015" width="382" height="60"/></clipPath><clipPath id="mx-clip-5224-2236-422-26-0"><rect x="5224" y="2236" width="422" height="26"/></clipPath><clipPath id="mx-clip-5224-2270-422-90-0"><rect x="5224" y="2270" width="422" height="90"/></clipPath><clipPath id="mx-clip-5222-2521-427-44-0"><rect x="5222" y="2521" width="427" height="44"/></clipPath><clipPath id="mx-clip-5222-2573-427-82-0"><rect x="5222" y="2573" width="427" height="82"/></clipPath><clipPath id="mx-clip-5219-2779-432-70-0"><rect x="5219" y="2779" width="432" height="70"/></clipPath><clipPath id="mx-clip-4489-2635-532-54-0"><rect x="4489" y="2635" width="532" height="54"/></clipPath><clipPath id="mx-clip-4489-2697-532-82-0"><rect x="4489" y="2697" width="532" height="82"/></clipPath><clipPath id="mx-clip-3474-2635-442-44-0"><rect x="3474" y="2635" width="442" height="44"/></clipPath><clipPath id="mx-clip-3474-2687-442-82-0"><rect x="3474" y="2687" width="442" height="82"/></clipPath><clipPath id="mx-clip-2739-1921-552-144-0"><rect x="2739" y="1921" width="552" height="144"/></clipPath><clipPath id="mx-clip-2739-2073-552-250-0"><rect x="2739" y="2073" width="552" height="250"/></clipPath></defs><g><path d="M 930 436 L 930 410 L 1300 410 L 1300 436" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 930 436 L 930 800 L 1300 800 L 1300 436" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 930 436 L 1300 436" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1114.5" y="427.5">State&lt;interface&gt;</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-934-441-362-144-0)" font-size="12px"><text x="935.5" y="453.5"># _supported_keys : std::unordered_map&lt;std::string, int&gt;</text><text x="935.5" y="467.5">#_keybindings : std::unordered_map&lt;std::string, int&gt;</text><text x="935.5" y="481.5">#_window : shared_ptr&lt;sf::RenderWindow&gt; </text><text x="935.5" y="495.5">#_state_stack : shared_ptr&lt;std::stack&lt;std::shared_ptr&lt;State&gt;&gt;&gt;</text><text x="935.5" y="509.5">#_to_quit : bool</text><text x="935.5" y="523.5">#_paused : bool</text><text x="935.5" y="537.5">#_mouse_positions : MousePositions</text><text x="935.5" y="551.5">#_textures : std::unordered_map&lt;std::string, sf::Texture&gt;</text></g><path d="M 930 584 L 1300 584" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-934-593-362-212-0)" font-size="12px"><text x="935.5" y="605.5">+State(window : shared_ptr&lt;sf::RenderWindow&gt;,</text><text x="935.5" y="619.5">supported_keys : shared_ptr&lt;unordered_map&lt;string, int&gt;&gt;,</text><text x="935.5" y="633.5">state_stack : shared_ptr&lt;stack&lt;shared_ptr&lt;State&gt;&gt;&gt;)</text><text x="935.5" y="647.5">+~State()</text><text x="935.5" y="661.5">+GetToQuit() const : bool</text><text x="935.5" y="675.5">+UpdateMousePositions()</text><text x="935.5" y="689.5">+Pause()</text><text x="935.5" y="703.5">+Unpause()</text><text x="935.5" y="717.5">+End()</text><text x="935.5" y="731.5">+virtual Render(target : sf::RenderTarget) = 0</text><text x="935.5" y="745.5">+virtual Update(time_elapsed : float) = 0</text><text x="935.5" y="759.5">+virtual UpdateInput(time_elapsed : float) = 0</text><text x="935.5" y="787.5">-virtual void InitKeybindings()</text></g><path d="M 230.49 2040 L 241.52 2004.8" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 248.99 1980.94 L 252.27 1995.07 L 241.52 2004.8 L 238.24 1990.67 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 566.34 1720 L 796.49 1611.73" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 819.11 1601.09 L 810.93 1613.07 L 796.49 1611.73 L 804.67 1599.76 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1423.62 1720 L 1270.63 1633.61" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1248.86 1621.32 L 1263.36 1621.06 L 1270.63 1633.61 L 1256.13 1633.87 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1657.12 2099.56 L 1650.86 1995.94" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1649.35 1970.98 L 1657.44 1983.02 L 1650.86 1995.94 L 1642.76 1983.91 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1620 436 L 1620 410 L 2300 410 L 2300 436" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1620 436 L 1620 730 L 2300 730 L 2300 436" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1620 436 L 2300 436" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1959.5" y="427.5">Creature &lt;interface&gt;</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1624-441-672-104-0)" font-size="12px"><text x="1625.5" y="453.5"># _sprite : sf::Sprite</text><text x="1625.5" y="467.5">#_attribute_comp : unique_ptr&lt;AttributeComponent&gt;</text><text x="1625.5" y="481.5">#_phys_comp : unique_ptr&lt;PhysicsComponent&gt;</text><text x="1625.5" y="495.5">#_graph_comp : unique_ptr&lt;GraphicsComponent&gt;</text><text x="1625.5" y="509.5">#_hitbox_comp : unique_ptr&lt;HitboxComponent&gt;</text></g><path d="M 1620 544 L 2300 544" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 670px; height: 1px; padding-top: 555px; margin-left: 1626px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 178px; overflow: hidden; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; ">+Creature()<br />+Creature(other : const Creature&amp;)<br />+virtual ~Creature()<br />+Update (time_elapsed: float)<br />+Render (target: sf::RenderTarget &amp;) const <br />+SetPosition(position : const sf::Vector2f &amp;)  <br />+Move(time_elapsed : float, direction : const sf::Vector2f &amp;) <br />+SetTexture(texture: sf::Texture&amp;)<br />+InitPhysicsComponent(settings: const map&lt;string, Json::Node&gt;&amp;)<br />+InitGraphicsComponent(texture_sheet: sf::Texture&amp;, settings :const std::map&lt;std::string, Json::Node&gt;&amp;) <br />+InitHitboxComponent(settings : const std::map&lt;std::string, Json::Node&gt; &amp;) <br />+InitAttributeComponent(settings :const std::map&lt;std::string, Json::Node&gt; &amp;) </div></div></div></foreignObject><text x="1626" y="567" fill="#000000" font-family="Helvetica" font-size="12px">+Creature()...</text></switch></g><path d="M 1320 26 L 1320 0 L 1570 0 L 1570 26" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1320 26 L 1320 308 L 1570 308 L 1570 26" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1320 26 L 1570 26" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1444.5" y="17.5">Game</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1324-31-242-134-0)" font-size="12px"><text x="1325.5" y="43.5">-event: sf::Event</text><text x="1325.5" y="57.5">-clock: sf::Clock</text><text x="1325.5" y="71.5">-_time_elapsed : float</text><text x="1325.5" y="85.5">-_graphics_settings : GraphicsSettings</text><text x="1325.5" y="99.5">-_window : shared_ptr&lt;sf::RenderWindow&gt; </text><text x="1325.5" y="113.5">-_states : shared_ptr&lt;stack&lt;shared_ptr&gt;&gt;</text><text x="1325.5" y="127.5">-_supported_keys : </text><text x="1325.5" y="141.5">shared_ptr&lt;unordered_map&lt;string, int&gt;&gt;</text></g><path d="M 1320 164 L 1570 164" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1324-173-242-140-0)" font-size="12px"><text x="1325.5" y="185.5">+Run()</text><text x="1325.5" y="199.5">+Update()</text><text x="1325.5" y="213.5">+UpdateEvents()</text><text x="1325.5" y="227.5">+UpdateTime()</text><text x="1325.5" y="241.5">+Render()</text><text x="1325.5" y="255.5">+EndApplication()</text><text x="1325.5" y="269.5">-InitWindow()</text><text x="1325.5" y="283.5">-InitKeys()</text><text x="1325.5" y="297.5">-InitStates()</text></g><path d="M 1257.68 410 L 1316.97 328.97" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1331.73 308.8 L 1330.29 323.23 L 1316.97 328.97 L 1318.42 314.54 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1770 995 L 1770 800 L 1770 736.37" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1770 731.12 L 1773.5 738.12 L 1770 736.37 L 1766.5 738.12 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1640 1021 L 1640 995 L 1900 995 L 1900 1021" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1640 1021 L 1640 1105 L 1900 1105 L 1900 1021" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1640 1021 L 1900 1021" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1769.5" y="1012.5">Player</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1644-1026-252-26-0)" font-size="12px"><text x="1645.5" y="1038.5">-sf::Vector2f _position</text></g><path d="M 1640 1051 L 1900 1051" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1644-1060-252-50-0)" font-size="12px"><text x="1645.5" y="1072.5">+Update(time_elapsed : float)</text><text x="1645.5" y="1086.5">+Render(target : sf::RenderTarget&amp;) const </text><text x="1645.5" y="1100.5">-UpdateAnimations(time_elapsed : float)</text></g><path d="M 1640 1063.09 L 1365.86 1090.71" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1340.98 1093.21 L 1352.68 1084.64 L 1365.86 1090.71 L 1354.16 1099.27 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1075 920 L 1075 860 L 1115 860 L 1115 806.37" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1115 801.12 L 1118.5 808.12 L 1115 806.37 L 1111.5 808.12 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 810 946 L 810 920 L 1340 920 L 1340 946" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 810 946 L 810 1320 L 1340 1320 L 1340 946" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 810 946 L 1340 946" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1074.5" y="937.5">GameState</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-814-951-522-134-0)" font-size="12px"><text x="815.5" y="963.5">-names_to_room_ids_: static const std::unordered_map&lt;std::string, ROOM_ID&gt; </text><text x="815.5" y="977.5">-rooms_: std::unordered_map&lt;ROOM_ID, std::unique_ptr&lt;Room&gt;&gt; </text><text x="815.5" y="991.5">-current_room_{nullptr}: Room* </text><text x="815.5" y="1005.5">-player_: std::shared_ptr&lt;Creature&gt;</text><text x="815.5" y="1019.5">-unique_enemies_: std::shared_ptr&lt;std::unordered_map&lt;EnemyType, std::shared_ptr&lt;Enemy&gt;&gt;&gt;</text><text x="815.5" y="1033.5">-unique_tiles_: std::shared_ptr&lt;std::unordered_map&lt;TileType, std::unique_ptr&lt;Tile&gt;&gt;&gt; </text><text x="815.5" y="1047.5">-unique_exits_: std::shared_ptr&lt;std::unordered_map&lt;ExitType, std::unique_ptr&lt;Exit&gt;&gt;&gt; </text><text x="815.5" y="1061.5">-pause_menu_: std::shared_ptr&lt;PauseMenu&gt;</text></g><path d="M 810 1084 L 1340 1084" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-814-1093-522-232-0)" font-size="12px"><text x="815.5" y="1105.5">+void Update(time_elapsed : float) </text><text x="815.5" y="1119.5">+void UpdateInput(time_elapsed : float) </text><text x="815.5" y="1133.5">+void Render(target : shared_ptr&lt;sf::RenderTarget&gt;)</text><text x="815.5" y="1147.5">+void UpdatePlayerInput(time_elapsed : float)</text><text x="815.5" y="1161.5">-void InitKeybindings()</text><text x="815.5" y="1175.5">-void InitTextures()</text><text x="815.5" y="1189.5">-void InitPlayer()</text><text x="815.5" y="1203.5">-void InitEnemySystem()</text><text x="815.5" y="1217.5">-void InitTileMap()</text><text x="815.5" y="1231.5">-void InitPauseMenu()</text><text x="815.5" y="1245.5">-void InitPauseMenu()</text><text x="815.5" y="1259.5">-void InitRooms();</text><text x="815.5" y="1273.5">-void InitUniqueExits();</text><text x="815.5" y="1287.5">-void InitUniqueEnemies();</text><text x="815.5" y="1301.5">-void AddUniqueEnemy(enemy_type:EnemyType, enemy:const std::shared_ptr&lt;Enemy&gt;&amp;);</text><text x="815.5" y="1315.5">-void InitUniqueTiles();</text></g><path d="M 820 1376 L 820 1350 L 1248 1350 L 1248 1376" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 820 1376 L 820 1650 L 1248 1650 L 1248 1376" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 820 1376 L 1248 1376" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1033.5" y="1367.5">class Room</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-824-1381-420-84-0)" font-size="12px"><text x="825.5" y="1393.5">-map_:std::shared_ptr&lt;TileMap&gt;</text><text x="825.5" y="1407.5">-player_{nullptr}:std::shared_ptr&lt;Creature&gt;</text><text x="825.5" y="1421.5">-enemy_system_:std::unique_ptr&lt;EnemySystem&gt;</text><text x="825.5" y="1435.5">-exits_:std::vector&lt;std::unique_ptr&lt;Exit&gt;&gt;</text><text x="825.5" y="1449.5">-room_id_{} :ROOM_ID</text></g><path d="M 820 1464 L 1248 1464" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-824-1473-420-182-0)" font-size="12px"><text x="825.5" y="1485.5">+explicit Room(file_name:const std::string &amp;file_name)</text><text x="825.5" y="1499.5">+void Update(time_elapsed:float)</text><text x="825.5" y="1513.5">+void Render(target:sf::RenderTarget &amp;)</text><text x="825.5" y="1527.5">+ GetCurrentRoomID() const:ROOM_ID</text><text x="825.5" y="1541.5">+ GetRoomID() const:ROOM_ID</text><text x="825.5" y="1555.5">+AddExit(exit:std::unique_ptr&lt;Exit&gt; )</text><text x="825.5" y="1569.5">+SetPlayer(player:std::shared_ptr&lt;Creature&gt;)</text><text x="825.5" y="1597.5">- InitEnemySystem(enemy_settings:const std::map&lt;std::string, Json::Node&gt;&amp;)</text><text x="825.5" y="1611.5">- InitTileMap(map_settings:const std::map&lt;std::string, Json::Node&gt;&amp;)</text><text x="825.5" y="1625.5">- UpdateCollisions()</text><text x="825.5" y="1639.5">- UpdatePlayerExit()</text></g><path d="M 1240 2660 L 1456.76 2551.62" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1479.12 2540.44 L 1471.23 2552.61 L 1456.76 2551.62 L 1464.65 2539.45 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2161.38 2650 L 1933.05 2550.39" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1910.13 2540.39 L 1924.53 2538.65 L 1933.05 2550.39 L 1918.65 2552.13 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1680 2100 L 1680 2060 L 2090 2060 L 2090 736.37" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2090 731.12 L 2093.5 738.12 L 2090 736.37 L 2086.5 738.12 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1550 2126 L 1550 2100 L 1810 2100 L 1810 2126" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1550 2126 L 1550 2210 L 1810 2210 L 1810 2126" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1550 2126 L 1810 2126" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1679.5" y="2117.5">Enemy&lt;interface&gt;</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1554-2131-252-84-0)" font-size="12px"><text x="1555.5" y="2143.5">+Enemy()</text><text x="1555.5" y="2157.5">+Enemy(other : const Enemy&amp;)</text><text x="1555.5" y="2171.5">+~Enemy()</text><text x="1555.5" y="2185.5">+GenerateAttributes()</text><text x="1555.5" y="2199.5">+virtual unique_ptr&lt;Enemy&gt; Clone() const = 0</text></g><path d="M 1680 2340 L 1680 2216.37" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1680 2211.12 L 1683.5 2218.12 L 1680 2216.37 L 1676.5 2218.12 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1445 2366 L 1445 2340 L 1915 2340 L 1915 2366" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1445 2366 L 1445 2540 L 1915 2540 L 1915 2366" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1445 2366 L 1915 2366" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1679.5" y="2357.5">EnemyGroup</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1449-2371-462-26-0)" font-size="12px"><text x="1450.5" y="2383.5">-list&lt;std::unique_ptr&lt;Enemy&gt;&gt; enemies_in_group</text></g><path d="M 1445 2396 L 1915 2396" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1449-2405-462-140-0)" font-size="12px"><text x="1450.5" y="2417.5">+EnemyGroup(settings: const std::map&lt;std::string, Json::Node&gt; &amp;)</text><text x="1450.5" y="2431.5">+EnemyGroup()</text><text x="1450.5" y="2445.5">+EnemyGroup(other: const EnemyGroup &amp;) = delete</text><text x="1450.5" y="2459.5">+EnemyGroup &amp;operator=(const EnemyGroup &amp;other) = delete</text><text x="1450.5" y="2473.5">+Update(float time_elapsed) override</text><text x="1450.5" y="2487.5">+Render(sf::RenderTarget &amp;target) const override</text><text x="1450.5" y="2501.5">+Clone() const override: unique_ptr&lt;Enemy&gt; </text><text x="1450.5" y="2515.5">+AddEnemy(std::unique_ptr&lt;Enemy&gt;)</text><text x="1450.5" y="2529.5">+UpdatePlayer(float time_elapsed, const std::shared_ptr&lt;Creature&gt;&amp; player) override</text></g><path d="M 2450 2650 L 2450 2155 L 1816.37 2155" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1811.12 2155 L 1818.12 2151.5 L 1816.37 2155 L 1818.12 2158.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2680 466 L 2680 440 L 3520 440 L 3520 466" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2680 466 L 2680 740 L 3520 740 L 3520 466" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2680 466 L 3520 466" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="3099.5" y="457.5">GraphicsComponent</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2684-471-832-84-0)" font-size="12px"><text x="2685.5" y="483.5">-_sprite:sf::Sprite*</text><text x="2685.5" y="497.5">-_texture_sheet:sf::Texture&amp;</text><text x="2685.5" y="511.5">-_animations:std::unordered_map&lt;std::string, std::unique_ptr&lt;Animation&gt;&gt;</text><text x="2685.5" y="525.5">-_last_animation{nullptr}:Animation*</text><text x="2685.5" y="539.5">-_prior_animation{nullptr}:Animation*</text></g><path d="M 2680 554 L 3520 554" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2684-563-832-182-0)" font-size="12px"><text x="2685.5" y="575.5">+GraphicsComponent(sprite:sf::Sprite &amp;,texture_sheet: sf::Texture &amp;,settings: const std::map&lt;std::string, Json::Node&gt;&amp;)</text><text x="2685.5" y="589.5">+GraphicsComponent(other:const GraphicsComponent&amp;)</text><text x="2685.5" y="603.5">+GraphicsComponent&amp; operator = (other:const GraphicsComponent&amp;)</text><text x="2685.5" y="617.5">+~GraphicsComponent()</text><text x="2685.5" y="631.5">+LoadFromMap(settings:const std::map&lt;std::string, Json::Node&gt;&amp;)</text><text x="2685.5" y="645.5">+IsDone(animation_key:const std::string&amp;) const:bool</text><text x="2685.5" y="659.5">+AddAnimation(animation_key:const std::string&amp;,anim_time: float,start_frame_x:int,start_frame_y: int,frames_x:  int,frames_y: int,rect_params: sf::Vector2i)</text><text x="2685.5" y="673.5">+ Play(animation_key:const std::string&amp;,time_elapsed: float,speed_modifier: float = 1, priority = false:bool):bool</text><text x="2685.5" y="687.5">+UpdateCopy(sprite:sf::Sprite &amp;)</text><text x="2685.5" y="715.5">-CheckLastAnimation(animation_key:const std::string&amp;) </text><text x="2685.5" y="729.5">-class Animation</text></g><path d="M 2160 2676 L 2160 2650 L 2690 2650 L 2690 2676" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2160 2676 L 2160 2880 L 2690 2880 L 2690 2676" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2160 2676 L 2690 2676" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="2424.5" y="2667.5">EnemySpawner</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2164-2681-522-64-0)" font-size="12px"><text x="2165.5" y="2693.5">- _prototype : shared_ptr&lt;Enemy&gt;</text><text x="2165.5" y="2707.5">- _spawned_enemies : list&lt;unique_ptr&lt;Enemy&gt;&gt;</text><text x="2165.5" y="2721.5">-_spawn_clock : sf::Clock </text><text x="2165.5" y="2735.5">-cloned : bool </text></g><path d="M 2160 2744 L 2690 2744" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2164-2753-522-132-0)" font-size="12px"><text x="2165.5" y="2765.5">+EnemySpawner(texture_sheet: sf::Texture &amp;, settings: const std::map&lt;std::string, Json::Node&gt;&amp;,</text><text x="2165.5" y="2779.5">prototype: std::shared_ptr&lt;Enemy&gt;)</text><text x="2165.5" y="2793.5">+EnemySpawner(other: const EnemySpawner&amp;)</text><text x="2165.5" y="2807.5">+Update(time_elapsed :float) override</text><text x="2165.5" y="2821.5">+Render(target: sf::RenderTarget &amp;) const override</text><text x="2165.5" y="2835.5">+Clone() const override: std::unique_ptr&lt;Enemy&gt;</text><text x="2165.5" y="2849.5">+CreateEnemy(level: int)</text><text x="2165.5" y="2863.5">+void SetPrototype(prototype: std::shared_ptr&lt;Enemy&gt;)</text><text x="2165.5" y="2877.5">-UpdateAnimations(time_elapsed: float)</text></g><path d="M 1100 2650 L 1100 2150 L 1543.63 2150" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1548.88 2150 L 1541.88 2153.5 L 1543.63 2150 L 1541.88 2146.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 960 2676 L 960 2650 L 1240 2650 L 1240 2676" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 960 2676 L 960 2810 L 1240 2810 L 1240 2676" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 960 2676 L 1240 2676" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1099.5" y="2667.5">Rat</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-964-2681-272-134-0)" font-size="12px"><text x="965.5" y="2693.5">+Rat()</text><text x="965.5" y="2707.5">+Rat(other : const Rat&amp;)</text><text x="965.5" y="2721.5">+~Rat()</text><text x="965.5" y="2749.5">+Update(time_elapsed : float)</text><text x="965.5" y="2763.5">+Render(target : sf::RenderTarget&amp;) const;</text><text x="965.5" y="2777.5">+Clone() const : std::unique_ptr&lt;Enemy&gt;</text><text x="965.5" y="2791.5">-UpdateAnimations(time_elapsed : float) </text></g><path d="M 1350 1746 L 1350 1720 L 1940 1720 L 1940 1746" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1350 1746 L 1350 1970 L 1940 1970 L 1940 1746" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1350 1746 L 1940 1746" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1644.5" y="1737.5">EnemySystem</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1354-1751-582-74-0)" font-size="12px"><text x="1355.5" y="1763.5">-list&lt;unique_ptr&lt;Enemy&gt;&gt;_ active_enemies</text><text x="1355.5" y="1777.5">-list&lt;unique_ptr&lt;Enemy&gt;&gt; _dead_enemies</text><text x="1355.5" y="1791.5">-vector&lt;shared_ptr&lt;Enemy&gt;&gt;  _unique_enemies</text><text x="1355.5" y="1805.5">-names_to_types_:static const std::unordered_map&lt;std::string, EnemyType&gt; </text><text x="1355.5" y="1819.5">-player: shared_ptr&lt;Creature&gt;;</text></g><path d="M 1350 1824 L 1940 1824" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1354-1833-582-142-0)" font-size="12px"><text x="1355.5" y="1845.5">+explicit EnemySystem(enemies_settings:const std::map&lt;std::string, Json::Node&gt; &amp;);</text><text x="1355.5" y="1859.5">+~EnemySystem();</text><text x="1355.5" y="1873.5">+ LoadEnemies(enemies_settings: const std::map&lt;std::string, Json::Node&gt; &amp;);</text><text x="1355.5" y="1887.5">+ CreateEnemy(params: EnemyParams, pos:const sf::Vector2f &amp;);</text><text x="1355.5" y="1901.5">+ Update(time_elapsed:float );</text><text x="1355.5" y="1915.5">+ Render(target:sf::RenderTarget &amp;) const;</text><text x="1355.5" y="1929.5">+ SetPlayer(player:std::shared_ptr&lt;Creature&gt; );</text><text x="1355.5" y="1943.5">+static void SetUniqueEnemies(unique_enemies: std::shared_ptr&lt;std::unordered_map&lt;EnemyType, </text><text x="1355.5" y="1957.5">                                                   std::shared_ptr&lt;Enemy&gt;&gt;&gt; );</text></g><path d="M 1050 1345 L 1049.91 1345.83" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1052.67 1320.98 L 1058.6 1334.22 L 1049.91 1345.83 L 1043.98 1332.59 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 995.95 1720 L 1003.62 1675.61" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1007.89 1650.97 L 1013 1664.54 L 1003.62 1675.61 L 998.51 1662.04 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 1746 L 0 1720 L 580 1720 L 580 1746" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 1746 L 0 1980 L 580 1980 L 580 1746" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 1746 L 580 1746" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="289.5" y="1737.5">TileMap</text></g><path d="M 0 1750 L 580 1750" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4-1759-572-74-0)" font-size="12px"><text x="5.5" y="1771.5">- _map : vector&lt;std::vector&lt;std::vector&lt;std::unique_ptr&lt;Tile&gt;&gt;&gt;&gt;</text><text x="5.5" y="1785.5">- _unique_tiles : static std::shared_ptr&lt;std::unordered_map&lt;TileType, std::unique_ptr&lt;Tile&gt;&gt;&gt;</text><text x="5.5" y="1799.5">- _grid_size : static int</text><text x="5.5" y="1813.5">- _world_size : sf::Vector2i</text><text x="5.5" y="1827.5">- borders_: sf::RectangleShape</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4-1833-572-152-0)" font-size="12px"><text x="5.5" y="1845.5">+TileMap(settings_file_name: const std::string&amp;, map_tile_name: </text><text x="5.5" y="1859.5">const std::string&amp;);</text><text x="5.5" y="1873.5">+UpdateCreature(creature:T &amp;,time_elapsed: float)</text><text x="5.5" y="1887.5">+Render(sf::RenderTarget&amp; target) const</text><text x="5.5" y="1901.5">+GetGridPosition(global_position : sf::Vector2f) const : sf::Vector2i </text><text x="5.5" y="1915.5">+GetGlobalPosition(grid_position :sf::Vector2i) const : sf::Vector2f </text><text x="5.5" y="1929.5">+static SetGridSize(grid_size: int);</text><text x="5.5" y="1943.5">+AddTileLayer(type:TileType,x_pos: int,y_pos: int,shift: sf::Vector2f);</text><text x="5.5" y="1957.5">static SetUniqueTiles(unique_tiles:std::shared_ptr&lt;std::unordered_map&lt;TileType, std::unique_ptr&lt;Tile&gt;&gt;&gt; );</text><text x="5.5" y="1971.5">-InitMap(file_name : const std::string&amp;)</text></g><path d="M 57 2066 L 57 2040 L 357 2040 L 357 2066" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 57 2066 L 57 2190 L 357 2190 L 357 2066" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 57 2066 L 357 2066" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="206.5" y="2057.5">Tile</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-61-2071-292-44-0)" font-size="12px"><text x="62.5" y="2083.5">_sprite : sf::Sprite </text><text x="62.5" y="2097.5">_type : TileType </text></g><path d="M 57 2115 L 357 2115" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-61-2125-292-70-0)" font-size="12px"><text x="62.5" y="2137.5">+Tile(type : TileType, texture : const sf::Texture&amp;, </text><text x="62.5" y="2151.5">pos : const sf::Vector2f&amp;)</text><text x="62.5" y="2165.5">+Clone(position : sf::Vector2f) const : unique_ptr&lt;Tile&gt;</text><text x="62.5" y="2179.5">+Render(target : sf::RenderTarget&amp;) const</text></g><path d="M 670 1746 L 670 1720 L 1270 1720 L 1270 1746" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 670 1746 L 670 2020 L 1270 2020 L 1270 1746" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 670 1746 L 1270 1746" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="969.5" y="1737.5">class Exit</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-674-1751-592-84-0)" font-size="12px"><text x="675.5" y="1763.5">-id_from_:OOM_ID</text><text x="675.5" y="1777.5">-id_to_:ROOM_ID</text><text x="675.5" y="1791.5">-sprite_{}:sf::Sprite </text><text x="675.5" y="1805.5">-hitbox_: sf::RectangleShape</text><text x="675.5" y="1819.5">-unique_exits_:static std::shared_ptr&lt;std::unordered_map&lt;ExitType, std::unique_ptr&lt;Exit&gt;&gt;&gt;</text></g><path d="M 670 1834 L 1270 1834" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-674-1843-592-182-0)" font-size="12px"><text x="675.5" y="1855.5">+Exit(from:ROOM_ID,to: ROOM_ID)</text><text x="675.5" y="1869.5">+Exit(hitbox:sf::RectangleShape,texture_sheet: sf::Texture&amp;,texture_rect: sf::IntRect)</text><text x="675.5" y="1883.5">+ GetRoomIdFrom() const:ROOM_ID</text><text x="675.5" y="1897.5">+ GetRoomIdTo() const:ROOM_ID</text><text x="675.5" y="1911.5">+ GetHitbox() const:sf::RectangleShape</text><text x="675.5" y="1925.5">+Render(sf::RenderTarget &amp;target) const</text><text x="675.5" y="1939.5">+LoadFromMap(settings:const std::map&lt;std::string, Json::Node&gt; &amp;)</text><text x="675.5" y="1953.5">+ GetPosition() const:sf::Vector2f</text><text x="675.5" y="1967.5">+ GetActiveRectangle() const:sf::RectangleShape</text><text x="675.5" y="1981.5">+static SetUniqueExits(unique_exits:  std::shared_ptr&lt;std::unordered_map&lt;ExitType, std::unique_ptr&lt;Exit&gt;&gt;&gt;)</text><text x="675.5" y="2009.5">-SetRoomIDs(from:ROOM_ID,to: ROOM_ID);</text></g><path d="M 2820 896 L 2820 870 L 3350 870 L 3350 896" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2820 896 L 2820 1200 L 3350 1200 L 3350 896" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2820 896 L 3350 896" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="3084.5" y="887.5">class Animation</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2824-901-522-164-0)" font-size="12px"><text x="2825.5" y="913.5">+TIME_NORMALIZE{100}:constexpr static float</text><text x="2825.5" y="927.5">+sprite_:sf::Sprite*</text><text x="2825.5" y="941.5">+texture_sheet_:sf::Texture &amp;</text><text x="2825.5" y="955.5">+time_to_animate_:float</text><text x="2825.5" y="969.5">+time_{0}:float</text><text x="2825.5" y="983.5">+start_rect_:sf::IntRect</text><text x="2825.5" y="997.5">+current_rect_:sf::IntRect</text><text x="2825.5" y="1011.5">+end_rect_:sf::IntRect</text><text x="2825.5" y="1025.5">+rect_params_:sf::Vector2i</text><text x="2825.5" y="1039.5">+is_done_:bool</text></g><path d="M 2820 1064 L 3350 1064" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2824-1073-522-132-0)" font-size="12px"><text x="2825.5" y="1085.5">+Animation(sprite:sf::Sprite *,texture_sheet: sf::Texture &amp;,anim_time: float,</text><text x="2825.5" y="1099.5">    start_frame_x: int,start_frame_y: int,end_frame_x:int,end_frame_y: int,rect_params: sf::Vector2i)</text><text x="2825.5" y="1113.5">+Animation(const Animation&amp; other) = default</text><text x="2825.5" y="1127.5">+Animation&amp;operator = (const Animation&amp; other) = delete</text><text x="2825.5" y="1141.5">+Play(time_elapsed:float,speed_modifier: float = 1):bool</text><text x="2825.5" y="1155.5">+Reset()</text><text x="2825.5" y="1169.5">+IsDone() const:bool</text><text x="2825.5" y="1183.5">-Animate()</text></g><path d="M 2220 836 L 2220 810 L 2730 810 L 2730 836" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2220 836 L 2220 1180 L 2730 1180 L 2730 836" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2220 836 L 2730 836" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="2474.5" y="827.5">class PhysicsComponent</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2224-841-502-104-0)" font-size="12px"><text x="2225.5" y="853.5">-sprite_:sf::Sprite *</text><text x="2225.5" y="867.5">-able_dir:PossibleDirections</text><text x="2225.5" y="881.5">-velocity_:sf::Vector2f</text><text x="2225.5" y="895.5">-max_velocity_:float</text><text x="2225.5" y="909.5">-acceleration_:float</text><text x="2225.5" y="923.5">-deceleration_:float</text></g><path d="M 2220 944 L 2730 944" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2224-953-502-232-0)" font-size="12px"><text x="2225.5" y="965.5">+PhysicsComponent(sprite:sf::Sprite &amp;,settings: const std::map&lt;std::string, Json::Node&gt; &amp;)</text><text x="2225.5" y="979.5">+PhysicsComponent(other:const PhysicsComponent&amp;) = default</text><text x="2225.5" y="993.5">+PhysicsComponent&amp; operator = (const PhysicsComponent&amp; other) = default</text><text x="2225.5" y="1007.5">+LoadFromMap(settings:const std::map&lt;std::string, Json::Node&gt;&amp;)</text><text x="2225.5" y="1021.5">+~PhysicsComponent()</text><text x="2225.5" y="1035.5">+ GetMaxVelocity() const:float</text><text x="2225.5" y="1049.5">+ GetVelocity() const:sf::Vector2f</text><text x="2225.5" y="1063.5">+ GetState(MovementState state) const:bool</text><text x="2225.5" y="1077.5">+SetPossibleMoveDirections(directions:PossibleDirections)</text><text x="2225.5" y="1091.5">+Stop()</text><text x="2225.5" y="1105.5">+StopAxisMoveX()</text><text x="2225.5" y="1119.5">+StopAxisMoveY()</text><text x="2225.5" y="1133.5">+void Accelerate(time_elapsed:float,_direction: const sf::Vector2f &amp;)</text><text x="2225.5" y="1147.5">+Update(time_elapsed:float)</text><text x="2225.5" y="1161.5">+UpdateCopy(sprite:sf::Sprite &amp;)</text></g><path d="M 3111.5 867.69 L 3107.29 765.96" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 3106.25 740.99 L 3114.12 753.17 L 3107.29 765.96 L 3099.42 753.78 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2674.96 570.56 L 2325.99 570.29" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2300.99 570.27 L 2313.49 562.92 L 2325.99 570.29 L 2313.48 577.63 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 3012.45 1380 L 3010.19 1260 Q 3010 1250 3000 1249.88 L 2190 1240.12 Q 2180 1240 2179.85 1230 L 2172.56 758.71" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2172.18 733.72 L 2179.72 746.1 L 2172.56 758.71 L 2165.02 746.33 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2475 810 L 2475 710 Q 2475 700 2465.3 697.55 L 2325.2 662.19" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2300.96 656.07 L 2314.88 652 L 2325.2 662.19 L 2311.28 666.26 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2770 1406 L 2770 1380 L 3260 1380 L 3260 1406" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2770 1406 L 2770 1650 L 3260 1650 L 3260 1406" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2770 1406 L 3260 1406" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="3014.5" y="1397.5">HitboxComponent</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2774-1411-482-54-0)" font-size="12px"><text x="2775.5" y="1423.5">-hitbox_:sf::RectangleShape</text><text x="2775.5" y="1437.5">-sprite_:sf::Sprite*</text><text x="2775.5" y="1451.5">-offset_:sf::Vector2f</text></g><path d="M 2770 1464 L 3260 1464" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2774-1473-482-182-0)" font-size="12px"><text x="2775.5" y="1485.5">+HitboxComponent(sprite:sf::Sprite&amp;,settings: const std::map&lt;std::string, Json::Node&gt; &amp;);</text><text x="2775.5" y="1499.5">+HitboxComponent(other:const HitboxComponent&amp;) = default;</text><text x="2775.5" y="1513.5">+HitboxComponent&amp; operator = (other:const HitboxComponent&amp;) = default;</text><text x="2775.5" y="1527.5">+~HitboxComponent();</text><text x="2775.5" y="1541.5">+LoadFromMap(settings:const std::map&lt;std::string, Json::Node&gt;&amp;);</text><text x="2775.5" y="1555.5">+Update();</text><text x="2775.5" y="1569.5">+Render(target:sf::RenderTarget&amp;) const;</text><text x="2775.5" y="1583.5">+SetPosition(position:const sf::Vector2f&amp;);</text><text x="2775.5" y="1597.5">+UpdateCopy(sprite:sf::Sprite&amp;);</text><text x="2775.5" y="1611.5">+ GetHitbox() const:sf::RectangleShape</text><text x="2775.5" y="1625.5">+ CheckCollision(other:const sf::FloatRect&amp;) const:bool</text><text x="2775.5" y="1639.5">+GetPosition() const:sf::Vector2f </text></g><path d="M 3920 2036 L 3920 2010 L 4450 2010 L 4450 2036" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 3920 2036 L 3920 2450 L 4450 2450 L 4450 2036" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 3920 2036 L 4450 2036" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="4184.5" y="2027.5">class BaseAttribute</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-3924-2041-522-104-0)" font-size="12px"><text x="3925.5" y="2053.5">#raw_bonuses_{} :std::list&lt;std::shared_ptr&lt;BaseAttribute&gt;&gt;</text><text x="3925.5" y="2067.5">#effects_{}: std::list&lt;std::shared_ptr&lt;BaseAttribute&gt;&gt; </text><text x="3925.5" y="2081.5">#stats_: Stats </text><text x="3925.5" y="2095.5">#level_change_: LevelChange </text><text x="3925.5" y="2109.5">#current_value_ : double </text><text x="3925.5" y="2123.5">#updated_{false}: bool </text></g><path d="M 3920 2144 L 4450 2144" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-3924-2153-522-302-0)" font-size="12px"><text x="3925.5" y="2165.5">+ method(texplicit BaseAttribute(stats: Stats,level_change:  LevelChange);</text><text x="3925.5" y="2179.5">+BaseAttribute(const BaseAttribute&amp; other) = delete;</text><text x="3925.5" y="2193.5">+BaseAttribute&amp; operator = (other: const BaseAttribute&amp;) = delete;</text><text x="3925.5" y="2207.5">+virtual Clone() const: std::shared_ptr&lt;BaseAttribute&gt; </text><text x="3925.5" y="2221.5">+ AddRawBonus(raw_bonus: std::shared_ptr&lt;BaseAttribute&gt;);</text><text x="3925.5" y="2235.5">+ AddEffect(effect :std::shared_ptr&lt;BaseAttribute&gt; );</text><text x="3925.5" y="2249.5">+virtual  AddDependantAttribute(attribute :ATTRIBUTE_ID id, std::shared_ptr&lt;BaseAttribute&gt;);</text><text x="3925.5" y="2263.5">+virtual GetBaseValue() const: double </text><text x="3925.5" y="2277.5">+virtual  GetCurrentValue() const: double</text><text x="3925.5" y="2291.5">+virtual  GetMultiplier() const: double</text><text x="3925.5" y="2305.5">+virtual IsReady() const: bool</text><text x="3925.5" y="2319.5">+virtual  ToRemove() const: bool</text><text x="3925.5" y="2333.5">+virtual  Update(time_elapsed :float);</text><text x="3925.5" y="2347.5">+ ResetUpdate();</text><text x="3925.5" y="2361.5">+virtual  UpdateLevel(level_change: int);</text><text x="3925.5" y="2375.5">+ UpdateBaseValue(delta_stats: Stats);</text><text x="3925.5" y="2389.5">+ UpdateLevelChange(delta_change: LevelChange);</text><text x="3925.5" y="2403.5">+ SetCurrentValue(value: double)</text><text x="3925.5" y="2431.5">#virtual  UpdateBonuses(float time_elapsed, std::list&lt;std::shared_ptr&lt;BaseAttribute&gt;&gt; &amp;bonuses);</text></g><path d="M 4807 2210 L 4807 2130 L 5020 2130 L 5020 2076.37" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 5020 2071.12 L 5023.5 2078.12 L 5020 2076.37 L 5016.5 2078.12 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 5435 2205 L 5435 2130 L 5250 2130 L 5250 2076.37" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 5250 2071.12 L 5253.5 2078.12 L 5250 2076.37 L 5246.5 2078.12 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 4612 1765 L 4185 1765 L 4185 2003.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 4185 2008.88 L 4181.5 2001.88 L 4185 2003.63 L 4188.5 2001.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 4612 1676 L 4612 1650 L 5162 1650 L 5162 1676" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 4612 1676 L 4612 1880 L 5162 1880 L 5162 1676" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 4612 1676 L 5162 1676" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="4886.5" y="1667.5">class AttributeValue</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4616-1681-542-34-0)" font-size="12px"><text x="4617.5" y="1693.5">#max_value_: std::shared_ptr&lt;BaseAttribute&gt;;</text><text x="4617.5" y="1707.5">#relative_value_: double;</text></g><path d="M 4612 1714 L 5162 1714" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4616-1723-542-162-0)" font-size="12px"><text x="4617.5" y="1735.5">+AttributeValue() = default;</text><text x="4617.5" y="1749.5">+explicit AttributeValue(std::shared_ptr&lt;BaseAttribute&gt; max_value, double relative_value = 1);</text><text x="4617.5" y="1763.5">+Clone() const override: std::shared_ptr&lt;BaseAttribute&gt; </text><text x="4617.5" y="1777.5">+ AddDependantAttribute(id: ATTRIBUTE_ID,override:  std::shared_ptr&lt;BaseAttribute&gt; attribute);</text><text x="4617.5" y="1791.5">+ GetBaseValue() const override: double</text><text x="4617.5" y="1805.5">+ GetCurrentValue() const override: double</text><text x="4617.5" y="1819.5">+ GetMultiplier() const override: double</text><text x="4617.5" y="1833.5">+ Update(time_elapsed: float) override;</text><text x="4617.5" y="1847.5">+ UpdateLevel(level_change: int) override;</text><text x="4617.5" y="1861.5"># UpdateBonuses(time_elapsed: float,bonuses:  std::list&lt;std::shared_ptr&lt;BaseAttribute&gt;&gt;&amp;) override;</text></g><path d="M 4940 2010 L 4490 2010 L 4490 2230 L 4456.37 2230" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 4451.12 2230 L 4458.12 2226.5 L 4456.37 2230 L 4458.12 2233.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 4582 2236 L 4582 2210 L 5032 2210 L 5032 2236" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 4582 2236 L 4582 2350 L 5032 2350 L 5032 2236" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 4582 2236 L 5032 2236" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="4806.5" y="2227.5">class OperatingEffect</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4586-2241-442-26-0)" font-size="12px"><text x="4587.5" y="2253.5">#to_remove_{false}: mutable bool</text></g><path d="M 4582 2266 L 5032 2266" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4586-2275-442-80-0)" font-size="12px"><text x="4587.5" y="2287.5">+OperatingEffect(id: ATTRIBUTE_ID,stats: Stats, level_change:  LevelChange )</text><text x="4587.5" y="2301.5">+Clone() const override: std::shared_ptr&lt;BaseAttribute&gt; </text><text x="4587.5" y="2315.5">+ToRemove() const override: bool</text><text x="4587.5" y="2329.5">+SetToRemove(value: bool)</text><text x="4587.5" y="2343.5">+IsReady() const override:bool</text></g><path d="M 4940 1976 L 4940 1950 L 5330 1950 L 5330 1976" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 4940 1976 L 4940 2070 L 5330 2070 L 5330 1976" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 4940 1976 L 5330 1976" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="5134.5" y="1967.5">class Effect</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4944-1981-382-26-0)" font-size="12px"><text x="4945.5" y="1993.5">#id_: ATTRIBUTE_ID</text></g><path d="M 4940 2006 L 5330 2006" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4944-2015-382-60-0)" font-size="12px"><text x="4945.5" y="2027.5">+Effect(id: ATTRIBUTE_ID ,stats:  Stats ,level_change:  LevelChange);</text><text x="4945.5" y="2041.5">+Clone() const override: std::shared_ptr&lt;BaseAttribute&gt; </text><text x="4945.5" y="2055.5">+SetAttributeId(id: ATTRIBUTE_ID );</text></g><path d="M 5220 2231 L 5220 2205 L 5650 2205 L 5650 2231" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 5220 2231 L 5220 2355 L 5650 2355 L 5650 2231" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 5220 2231 L 5650 2231" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="5434.5" y="2222.5">class TimedEffect</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-5224-2236-422-26-0)" font-size="12px"><text x="5225.5" y="2248.5">#time_to_expire_{std::numeric_limits&lt;float&gt;::infinity()}:float</text></g><path d="M 5220 2261 L 5650 2261" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-5224-2270-422-90-0)" font-size="12px"><text x="5225.5" y="2282.5">+TimedEffect(id: ATTRIBUTE_ID,stats: Stats,level_change: LevelChange)</text><text x="5225.5" y="2296.5">+Clone() const override : std::shared_ptr&lt;BaseAttribute&gt;</text><text x="5225.5" y="2310.5">+ToRemove() const override: bool</text><text x="5225.5" y="2324.5">+Update(time_elapsed: float ) override</text><text x="5225.5" y="2338.5">+SetExpirationTime(time_to_expire: float)</text></g><path d="M 5435 2490 L 5435 2361.37" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 5435 2356.12 L 5438.5 2363.12 L 5435 2361.37 L 5431.5 2363.12 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 5217.5 2516 L 5217.5 2490 L 5652.5 2490 L 5652.5 2516" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 5217.5 2516 L 5217.5 2650 L 5652.5 2650 L 5652.5 2516" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 5217.5 2516 L 5652.5 2516" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="5434.5" y="2507.5">class OverTimeEffect</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-5222-2521-427-44-0)" font-size="12px"><text x="5223" y="2533.5">tick_time_{1.0}: float;</text><text x="5223" y="2547.5">time_from_tick_{0}: mutable float;</text></g><path d="M 5217.5 2564 L 5652.5 2564" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-5222-2573-427-82-0)" font-size="12px"><text x="5223" y="2585.5">+OverTimeEffect(id: ATTRIBUTE_ID,stats:  Stats,level_change:  LevelChange);</text><text x="5223" y="2599.5">+Clone() const override: std::shared_ptr&lt;BaseAttribute&gt; </text><text x="5223" y="2613.5">+Update(time_elapsed: float) override;</text><text x="5223" y="2627.5">+SetTickTime(tick_time: float);</text><text x="5223" y="2641.5"># SetTimeFromTick(time_from_tick: float);</text></g><path d="M 5435 2740 L 5435 2656.37" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 5435 2651.12 L 5438.5 2658.12 L 5435 2656.37 L 5431.5 2658.12 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 5215 2766 L 5215 2740 L 5655 2740 L 5655 2766" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 5215 2766 L 5215 2844 L 5655 2844 L 5655 2766" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 5215 2766 L 5655 2766" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="5434.5" y="2757.5">class ProckingEffect</text></g><path d="M 5215 2770 L 5655 2770" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-5219-2779-432-70-0)" font-size="12px"><text x="5220.5" y="2791.5">+ProckingEffect(id: ATTRIBUTE_ID,stats:  Stats,level_change:  LevelChange);</text><text x="5220.5" y="2805.5">+Clone() const override: std::shared_ptr&lt;BaseAttribute&gt; </text><text x="5220.5" y="2819.5">+IsReady() const override:bool</text></g><path d="M 4485 2689 L 4320 2689 L 4320 2456.37" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 4320 2451.12 L 4323.5 2458.12 L 4320 2456.37 L 4316.5 2458.12 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 4485 2630 L 4485 2604 L 5025 2604 L 5025 2630" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 4485 2630 L 4485 2774 L 5025 2774 L 5025 2630" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 4485 2630 L 5025 2630" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="4754.5" y="2621.5">class Attribute</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4489-2635-532-54-0)" font-size="12px"><text x="4490.5" y="2647.5">#base_attributes_: std::unordered_map&lt;ATTRIBUTE_ID, std::shared_ptr&lt;BaseAttribute&gt;&gt;;</text><text x="4490.5" y="2661.5">#calc_func_: StatsFunc;</text></g><path d="M 4485 2688 L 5025 2688" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4489-2697-532-82-0)" font-size="12px"><text x="4490.5" y="2709.5">+Attribute(stats: Stats,level_change: LevelChange,calc_func: StatsFunc);</text><text x="4490.5" y="2723.5">+Clone() const override:std::shared_ptr&lt;BaseAttribute&gt; </text><text x="4490.5" y="2737.5">+AddDependantAttribute(id ATTRIBUTE_ID,attribute: std::shared_ptr&lt;BaseAttribute&gt;) override;</text><text x="4490.5" y="2751.5">+Update(time_elapsed: float) override;</text><text x="4490.5" y="2765.5"># ApplyBaseAttributes(base_attributes: const BaseStats&amp;,base_value: double&amp;);</text></g><path d="M 3920 2684 L 4030 2684 L 4030 2456.37" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 4030 2451.12 L 4033.5 2458.12 L 4030 2456.37 L 4026.5 2458.12 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 3470 2630 L 3470 2604 L 3920 2604 L 3920 2630" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 3470 2630 L 3470 2764 L 3920 2764 L 3920 2630" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 3470 2630 L 3920 2630" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="3694.5" y="2621.5">class RawBonus</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-3474-2635-442-44-0)" font-size="12px"><text x="3475.5" y="2647.5">-to_remove_{false}: bool </text><text x="3475.5" y="2661.5">-id_: ATTRIBUTE_ID </text></g><path d="M 3470 2678 L 3920 2678" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-3474-2687-442-82-0)" font-size="12px"><text x="3475.5" y="2699.5">+explicit RawBonus(id: ATTRIBUTE_ID,stats:  Stats,level_change:  LevelChange)</text><text x="3475.5" y="2713.5">+ Clone() const override: std::shared_ptr&lt;BaseAttribute&gt;</text><text x="3475.5" y="2727.5">+ ToRemove() const override: bool</text><text x="3475.5" y="2741.5">+ SetAttributeId(id: ATTRIBUTE_ID );</text><text x="3475.5" y="2755.5">+ SetToRemove(value: bool);</text></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 2551px; margin-left: 3759px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: nowrap; ">Text</div></div></div></foreignObject><text x="3759" y="2555" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Text</text></switch></g><path d="M 2735 1916 L 2735 1890 L 3295 1890 L 3295 1916" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2735 1916 L 2735 2318 L 3295 2318 L 3295 1916" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2735 1916 L 3295 1916" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="3014.5" y="1907.5">AttributeComponent</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2739-1921-552-144-0)" font-size="12px"><text x="2740.5" y="1933.5">-int level_{1};</text><text x="2740.5" y="1947.5">-static const std::unordered_map&lt;std::string, ATTRIBUTE_ID&gt; names_to_id_;</text><text x="2740.5" y="1961.5">-static const std::unordered_map&lt;ATTRIBUTE_ID, std::vector&lt;ATTRIBUTE_ID&gt;&gt; dependence_;</text><text x="2740.5" y="1975.5">-static const std::unordered_map&lt;ATTRIBUTE_ID, std::pair&lt;double, double&gt;&gt; id_boundaries_;</text><text x="2740.5" y="1989.5">-using BaseStats = std::unordered_map&lt;ATTRIBUTE_ID, std::shared_ptr&lt;BaseAttribute&gt;&gt;;</text><text x="2740.5" y="2003.5">-using StatsFunc = std::function&lt;double(const BaseStats &amp;)&gt;;</text><text x="2740.5" y="2017.5">-static const std::unordered_map&lt;ATTRIBUTE_ID, StatsFunc&gt; id_to_functions_;</text><text x="2740.5" y="2031.5">-std::vector&lt;std::shared_ptr&lt;BaseAttribute&gt;&gt; attributes_;</text></g><path d="M 2735 2064 L 3295 2064" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2739-2073-552-250-0)" font-size="12px"><text x="2740.5" y="2085.5">+explicit AttributeComponent(settings:const std::map&lt;std::string, Json::Node&gt; &amp;);</text><text x="2740.5" y="2099.5">+AttributeComponent(other:const AttributeComponent &amp;);</text><text x="2740.5" y="2113.5">+AttributeComponent &amp;operator=(other:const AttributeComponent &amp;);</text><text x="2740.5" y="2127.5">+~AttributeComponent() = default;</text><text x="2740.5" y="2141.5">+Update(time_elapsed:float);</text><text x="2740.5" y="2155.5">+LoadFromMap(settings:const std::map&lt;std::string, Json::Node&gt; &amp;);</text><text x="2740.5" y="2169.5">+GetAttributeValue(id:ATTRIBUTE_ID):double</text><text x="2740.5" y="2183.5">+GetLevel():int</text><text x="2740.5" y="2211.5">-ResetAttributesDependence();</text><text x="2740.5" y="2225.5">-CheckBoundaries();</text><text x="2740.5" y="2239.5">-LoadBaseAttributes(const std::map&lt;std::string, Json::Node&gt; &amp;settings);</text><text x="2740.5" y="2253.5">-LoadDependantAttributes(const std::map&lt;std::string, Json::Node&gt; &amp;settings);</text><text x="2740.5" y="2267.5">-LoadChangingAttributes(const std::map&lt;std::string, Json::Node&gt; &amp;settings);</text><text x="2740.5" y="2281.5">-GetBaseStats(Stats&amp; stats, LevelChange&amp; level_change, const std::map&lt;std::string, Json::Node&gt;&amp; settings);</text></g><path d="M 3909.93 2240.11 L 3323.31 2125.96" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 3298.77 2121.19 L 3312.44 2116.36 L 3323.31 2125.96 L 3309.63 2130.79 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2735 1890 L 2138.78 1564.79 Q 2130 1560 2129.83 1550 L 2116.17 756.89" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2115.74 731.9 L 2123.3 744.27 L 2116.17 756.89 L 2108.6 744.52 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://desk.draw.io/support/solutions/articles/16000042487" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>